{"version":3,"sources":["components/Layuot.js","components/conponents.styled.js","components/ContactForm.js","components/ContactList.js","components/Filter.js","components/App.js","index.js"],"names":["Layout","children","Container","styled","form","Input","input","Button","button","List","ul","FilterBox","div","FilterInput","ContactItem","li","ItemParag","p","ContactBtn","ContactForm","state","name","number","handleSubmit","e","preventDefault","props","onAddContact","setState","handleInputChange","target","value","this","onSubmit","htmlFor","type","id","placeholder","required","onChange","Component","ContactList","contacts","onRemove","map","key","onClick","Filter","onChangeFilter","App","filter","addContact","contact","uuidv4","prevState","uniqContact","window","alert","contactList","find","removeContact","contactId","changeFilter","getFilteredContacts","toLowerCase","includes","persistedContacts","localStorage","getItem","JSON","parse","setItem","stringify","filteredContacts","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.00af9f1d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Layout = ({ children }) => <div>{children}</div>;\r\n\r\nexport default Layout;\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nconst Container = styled.form`\r\n  width: 350px;\r\n  height: auto;\r\n  border: 2px solid black;\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-wrap: nowrap;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  margin-bottom: 30px;\r\n`;\r\nconst Input = styled.input`\r\n  margin-bottom: 10px;\r\n  margin-top: 7px;\r\n  background-color: white;\r\n  padding: 5px;\r\n  width: 300px;\r\n  border: 1px solid gray;\r\n  border-radius: 5px;\r\n  outline:none;\r\n`;\r\nconst Button = styled.button`\r\n  margin-top: 10px;\r\n  background-color:lightblue;\r\n  padding: 5px;\r\n  width: 100px;\r\n  border-radius: 5px;\r\n  border: 1px solid gray;\r\n  outline:none;\r\n`;\r\nconst List = styled.ul`\r\n  display: block;\r\n  width: 350px;\r\n  height: auto;\r\n  padding-left: 20px;\r\n`;\r\nconst FilterBox = styled.div`\r\n  width: 350px;\r\n  height: auto;\r\n  padding-left: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 10px;\r\n`;\r\nconst FilterInput = styled.input`\r\n  margin-top: 10px;\r\n  background-color: white;\r\n  padding: 5px;\r\n  width: 100px;\r\n  border-radius: 5px;\r\n  border: 1px solid gray;\r\n  outline:none;\r\n`;\r\n\r\nconst ContactItem = styled.li`\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin: 0;\r\n  display: flex;\r\n  width: 370px;\r\n  height: auto;\r\n  flex-direction: row;\r\n  flex-wrap: nowrap;\r\n`;\r\nconst ItemParag = styled.p`\r\nwidth: 300px;\r\n  height:auto;\r\n  margin-bottom:10px;\r\n`;\r\nconst ContactBtn = styled.button`\r\n  background-color: whitesmoke;\r\n  font-size: 12px;\r\n  width: 60px;\r\n  height: 18px;\r\n  border-radius: 5px;\r\n  border: 1px solid gray;\r\n  margin-right:0;\r\n`;\r\nexport {\r\n  Container,\r\n  Input,\r\n  Button,\r\n  List,\r\n  ItemParag,\r\n  ContactItem,\r\n  ContactBtn,\r\n  FilterBox,\r\n  FilterInput,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Container, Input, Button } from \"./conponents.styled\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class ContactForm extends Component {\r\n  static propTypes = {\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n    value: PropTypes.string,\r\n  };\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    if (this.state) e.preventDefault();\r\n    this.props.onAddContact(this.state);\r\n\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <Container onSubmit={this.handleSubmit}>\r\n        <label htmlFor=\"name\"> Name</label>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          id=\"name\"\r\n          placeholder=\"Name Surname\"\r\n          required\r\n          value={name}\r\n          onChange={this.handleInputChange}\r\n        />\r\n\r\n        <label htmlFor=\"number\"> Number</label>\r\n        <Input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          id=\"number\"\r\n          placeholder=\"667-67-67\"\r\n          required\r\n          value={number}\r\n          onChange={this.handleInputChange}\r\n        />\r\n\r\n        <Button type=\"submit\">Add contact</Button>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { List, ContactItem, ContactBtn, ItemParag } from \"./conponents.styled\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function ContactList({ contacts, onRemove }) {\r\n  return (\r\n    <List>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ContactItem key={id}>\r\n          <ItemParag>\r\n            {name}: {number}\r\n          </ItemParag>\r\n          <ContactBtn onClick={() => onRemove(id)}>Delate</ContactBtn>\r\n        </ContactItem>\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n  onRemove: PropTypes.func,\r\n  id: PropTypes.string,\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n};\r\n","import React from \"react\";\r\nimport { FilterBox, FilterInput } from \"./conponents.styled\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Filter({ value, onChangeFilter }) {\r\n  return (\r\n    <FilterBox>\r\n      <label htmlFor=\"filter\">Find contacts by name </label>\r\n      <FilterInput\r\n        type=\"text\"\r\n        id=\"filter\"\r\n        placeholder=\"search...\"\r\n        value={value}\r\n        onChange={(e) => onChangeFilter(e.target.value)}\r\n      ></FilterInput>\r\n    </FilterBox>\r\n  );\r\n}\r\nFilter.propTypes = {\r\n  onChangeFilter: PropTypes.func,\r\n  value: PropTypes.string,\r\n};\r\n","import React, { Component } from \"react\";\nimport Layout from \"./Layuot\";\nimport ContactForm from \"./ContactForm\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactList from \"./ContactList\";\nimport Filter from \"./Filter\";\nimport PropTypes from \"prop-types\";\n\nexport default class App extends Component {\n  static propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.object),\n    filter: PropTypes.string,\n  };\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n   componentDidMount(){\n   const persistedContacts = localStorage.getItem('contacts')\n   if(persistedContacts){\n     this.setState({\n       contacts:JSON.parse(persistedContacts)\n     })\n   }\n   }\n   componentDidUpdate(prevState){\n     if(prevState.contacts!== this.state.contacts){\n  localStorage.setItem('contacts',JSON.stringify(this.state.contacts))\n     }\n   }\n  addContact = ({ name, number }) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    this.setState((prevState) => {\n      return !this.uniqContact(contact)\n        ? {\n            contacts: [...prevState.contacts, contact],\n          }\n        : window.alert(`${contact.name} is already in contacts.`);\n    });\n  };\n  uniqContact = (contactList) => {\n    const { contacts } = this.state;\n    return contacts.find(({ name }) => name === contactList.name);\n  };\n  removeContact = (contactId) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  changeFilter = (filter) => {\n    this.setState({ filter });\n  };\n  getFilteredContacts = () => {\n    const { filter, contacts } = this.state;\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n  render() {\n    const { filter, contacts } = this.state;\n    const filteredContacts = this.getFilteredContacts();\n    return (\n      <Layout>\n        <h1>Phonebook</h1>\n        <ContactForm onAddContact={this.addContact} />\n\n        {contacts.length > 0 && (\n          <>\n            <Filter value={filter} onChangeFilter={this.changeFilter} />\n            <ContactList\n              contacts={filteredContacts}\n              onRemove={this.removeContact}\n            />\n          </>\n        )}\n      </Layout>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App'\n\n\nReactDOM.render(<App/>,document.getElementById(\"root\"));"],"sourceRoot":""}